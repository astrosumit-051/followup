import { ObjectType, Field, ID, Int, HideField, registerEnumType } from '@nestjs/graphql';
import { EmailStatus, TemplateType } from '../enums';

// Register enums for GraphQL schema generation
registerEnumType(EmailStatus, {
  name: 'EmailStatus',
  description: 'Current state of an email (DRAFT, SCHEDULED, SENT, FAILED, CANCELLED)',
});

registerEnumType(TemplateType, {
  name: 'TemplateType',
  description: 'Style/source of email template (FORMAL, CASUAL, CUSTOM, AI_GENERATED, TEMPLATE_BASED)',
});

/**
 * Email Entity
 *
 * Represents an email in the system - either a draft, scheduled, or sent email.
 * Generated by AI or manually created by the user.
 */
@ObjectType()
export class Email {
  @Field(() => ID)
  id!: string;

  @HideField()
  userId!: string;

  @Field()
  contactId!: string;

  @Field()
  subject!: string;

  @Field()
  body!: string;

  @Field({ nullable: true })
  bodyHtml?: string | null;

  @Field(() => EmailStatus)
  status!: EmailStatus;

  @Field(() => TemplateType, { nullable: true })
  templateType?: TemplateType | null;

  @Field({ nullable: true })
  providerId?: string | null;

  @Field(() => Int, { nullable: true })
  tokensUsed?: number | null;

  @Field({ nullable: true })
  generatedAt?: Date | null;

  @Field({ nullable: true })
  sentAt?: Date | null;

  @Field({ nullable: true })
  openedAt?: Date | null;

  @Field({ nullable: true })
  repliedAt?: Date | null;

  @Field()
  createdAt!: Date;

  @Field()
  updatedAt!: Date;
}

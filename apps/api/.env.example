# Supabase Configuration (Backend)
# Get these values from: https://supabase.com/dashboard/project/YOUR-PROJECT-REF/settings/api

# Your Supabase project URL (same as frontend, e.g., https://abcdefghijklmno.supabase.co)
SUPABASE_URL=https://YOUR-PROJECT-REF.supabase.co

# JWT secret for verifying Supabase auth tokens
# Found in: Settings > API > JWT Settings > JWT Secret
SUPABASE_JWT_SECRET=your-jwt-secret-here

# Service role key (KEEP SECRET - has admin access, bypasses RLS)
# Found in: Settings > API > service_role key (click "Reveal")
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key-here

# Database Connection
# Get from: Settings > Database > Connection string > URI (with password)
# Replace [YOUR-PASSWORD] with your database password
DATABASE_URL=postgresql://postgres:YOUR_DB_PASSWORD@db.YOUR_PROJECT_REF.supabase.co:5432/postgres

# Application Configuration
# Server port (optional, defaults to 3001)
PORT=3001

# Frontend URL for CORS configuration
# For development: http://localhost:3000
# For production: https://your-production-domain.com
# Multiple origins: https://domain1.com,https://domain2.com
FRONTEND_URL=http://localhost:3000

# OpenRouter API Configuration (for AI email generation)
# Get your API key from: https://openrouter.ai/keys
# OpenRouter provides unified access to multiple LLM providers (OpenAI, Anthropic, Google, etc.)
OPENROUTER_API_KEY=your-openrouter-api-key-here

# Application URL (used for OpenRouter API headers)
# For development: http://localhost:3001
# For production: https://api.your-production-domain.com
APP_URL=http://localhost:3001

# Instructions:
# 1. Copy this file to .env: cp .env.example .env
# 2. Go to your Supabase project dashboard
# 3. Navigate to Settings > API
# 4. Copy the "Project URL" to SUPABASE_URL
# 5. Copy the "JWT Secret" to SUPABASE_JWT_SECRET (under JWT Settings)
# 6. Copy the "service_role" key to SUPABASE_SERVICE_ROLE_KEY (click Reveal)
# 7. Navigate to Settings > Database
# 8. Copy the connection string (URI format) to DATABASE_URL
# 9. Replace [YOUR-PASSWORD] with your actual database password
# 10. Set FRONTEND_URL to your Next.js application URL (for CORS)
# 11. Go to https://openrouter.ai/keys to get your OpenRouter API key
# 12. Copy the API key to OPENROUTER_API_KEY
# 13. Set APP_URL to your backend API URL (for OpenRouter headers)
